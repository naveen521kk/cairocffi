name: cairocffi's tests
on: [push]

jobs:
  tests:
    name: ${{ matrix.os }} - ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, pypy3]
        include:
          - msystem: MINGW64
            arch: x86_64
          - msystem: MINGW32
            arch: i686
        exclude:
          # No wheel for numpy
          - os: macos-latest
            python-version: pypy3
          - os: windows-latest
            python-version: pypy3
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: xvfb daemon (Ubuntu)
        if: runner.os == 'linux'
        run: sudo /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16
      - name: Pip installs (Ubuntu)
        if: runner.os == 'linux'
        run: |
          python -m pip install -e .[test,xcb]
          python -m pip install -e .[test]
      - name: Install cairo gdk-pixbuf (MacOS)
        if: runner.os == 'macos'
        run: |
          brew update
          brew pin numpy gdal postgis
          brew install cairo gdk-pixbuf
      - name: Install msys2 and DejaVu (Windows)
        uses: msys2/setup-msys2@v2
        if: runner.os == 'windows'
        with:
          msystem: ${{ matrix.msystem }}
          update: true
          install: >-
            mingw-w64-${{ matrix.arch }}-ttf-dejavu
            mingw-w64-${{ matrix.arch }}-gtk3

      - name: Force numpy install binary (Pypy3)
        if: matrix.python-version == 'pypy3'
        run: python -m pip install --only-binary ":all:" numpy
      - name: Launch tests
        if: runner.os != 'windows'
        run: python setup.py test

      - shell: msys2 {0}
        if: runner.os == 'windows'
        run: |
           python setup.py test
